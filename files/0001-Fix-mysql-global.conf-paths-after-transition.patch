From 02ffd8ea3beeb82db53b52acc8e2b80664072560 Mon Sep 17 00:00:00 2001
From: Peter O'Connor <peter@solus-project.com>
Date: Mon, 16 Jul 2018 13:49:35 +1000
Subject: [PATCH] Correct mysql-global.conf paths after transition

When XdgBaseDirs::findResourceFile transitioned to
StandardDirs::locateResourceFile, some instances of 'akonadi' were left in the
path. fullRelPath includes /akonadi/ in the path already and was removed
correctly only in some instances in 275337997efb46512cd7c9e9c92b3d66f8d3bae6.
This allows akonadiselftest to find the right path again.

Signed-off-by: Peter O'Connor <peter@solus-project.com>
---
 src/server/storage/dbconfigmysql.cpp | 2 +-
 src/widgets/selftestdialog.cpp       | 4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/server/storage/dbconfigmysql.cpp b/src/server/storage/dbconfigmysql.cpp
index 792bc95..936fb47 100644
--- a/src/server/storage/dbconfigmysql.cpp
+++ b/src/server/storage/dbconfigmysql.cpp
@@ -357,7 +357,7 @@ bool DbConfigMysql::startInternalServer()
         }
 
         // first run, some MySQL versions need a mysql_install_db run for that
-        const QString confFile = StandardDirs::locateResourceFile("config", QStringLiteral("akonadi/mysql-global.conf"));
+        const QString confFile = StandardDirs::locateResourceFile("config", QStringLiteral("mysql-global.conf"));
         if (QDir(dataDir).entryList(QDir::NoDotAndDotDot | QDir::AllEntries).isEmpty()) {
             if (isMariaDB) {
                 initializeMariaDBDatabase(confFile, dataDir);
diff --git a/src/widgets/selftestdialog.cpp b/src/widgets/selftestdialog.cpp
index d6b5ac3..36ace19 100644
--- a/src/widgets/selftestdialog.cpp
+++ b/src/widgets/selftestdialog.cpp
@@ -318,7 +318,7 @@ void SelfTestDialog::testMySQLServerConfig()
     }
 
     QStandardItem *item = nullptr;
-    const QString globalConfig = StandardDirs::locateResourceFile("config", QStringLiteral("akonadi/mysql-global.conf"));
+    const QString globalConfig = StandardDirs::locateResourceFile("config", QStringLiteral("mysql-global.conf"));
     const QFileInfo globalConfigInfo(globalConfig);
     if (!globalConfig.isEmpty() && globalConfigInfo.exists() && globalConfigInfo.isReadable()) {
         item = report(Success, ki18n("MySQL server default configuration found."),
@@ -331,7 +331,7 @@ void SelfTestDialog::testMySQLServerConfig()
                      "Check your Akonadi installation is complete and you have all required access rights."));
     }
 
-    const QString localConfig  = StandardDirs::locateResourceFile("config", QStringLiteral("akonadi/mysql-local.conf"));
+    const QString localConfig  = StandardDirs::locateResourceFile("config", QStringLiteral("mysql-local.conf"));
     const QFileInfo localConfigInfo(localConfig);
     if (localConfig.isEmpty() || !localConfigInfo.exists()) {
         report(Skip, ki18n("MySQL server custom configuration not available."),
-- 
2.18.0

