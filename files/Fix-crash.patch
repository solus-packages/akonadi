From 0297248b0e768516236bdfeb55d04e8d4f4b1c80 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Daniel=20Vr=C3=A1til?= <dvratil@kde.org>
Date: Mon, 27 Aug 2018 23:26:02 +0200
Subject: [PATCH] Fix crash when NotificationCollector does not have Connection

This can happen when the NotificationCollector is invoked internally
for instance from the SearchManager.

BUG: 397239
FIXED-IN: 5.9.1
---
 src/server/connection.cpp                    | 4 +++-
 src/server/storage/notificationcollector.cpp | 2 +-
 2 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/src/server/connection.cpp b/src/server/connection.cpp
index 832cc6706..3e1f43ddb 100644
--- a/src/server/connection.cpp
+++ b/src/server/connection.cpp
@@ -79,7 +79,9 @@ Connection::Connection(quintptr socketDescriptor, QObject *parent)
 
 Connection *Connection::self()
 {
-    Q_ASSERT(sConnectionStore->hasLocalData());
+    if (!sConnectionStore->hasLocalData()) {
+        return nullptr;
+    }
     return sConnectionStore->localData();
 }
 
diff --git a/src/server/storage/notificationcollector.cpp b/src/server/storage/notificationcollector.cpp
index 4c7014175..b92ee965f 100644
--- a/src/server/storage/notificationcollector.cpp
+++ b/src/server/storage/notificationcollector.cpp
@@ -535,7 +535,7 @@ void NotificationCollector::completeNotification(const Protocol::ChangeNotificat
             // we emit a notification without it and leave it up to the Monitor
             // to retrieve the Item on demand - we should have a RID stored in
             // Akonadi by then.
-            if (allHaveRID || msg->operation() != Protocol::ItemChangeNotification::Add) {
+            if (Connection::self() && (allHaveRID || msg->operation() != Protocol::ItemChangeNotification::Add)) {
 
                 // Prevent transactions inside FetchHelper to recursively call our slot
                 QScopedValueRollback<bool> ignoreTransactions(mIgnoreTransactions);
